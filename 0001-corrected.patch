From 873ee6b35f360530fc1c177e7ed3ff0c884ae0d6 Mon Sep 17 00:00:00 2001
From: AnkurRam2002 <ankurram2002@gmail.com>
Date: Wed, 21 Feb 2024 22:29:17 +0530
Subject: [PATCH] corrected

---
 src/App.tsx   | 16 ++++++++++++++--
 src/Graph.tsx | 11 +++++++++--
 2 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..dbe0761 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -7,6 +7,7 @@ import './App.css';
  * State declaration for <App />
  */
 interface IState {
+  showGraph: boolean,
   data: ServerRespond[],
 }
 
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,18 +31,28 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
+   if (this.state.showGraph){
     return (<Graph data={this.state.data}/>)
-  }
+  }}
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
+    let x=0;
+    const interval = setInterval(()=>{
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
       // Update the state by creating a new array of data that consists of
       // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
+      this.setState({ data: serverResponds,
+                      showGraph : true,
+     });
     });
+    x++;
+    if (x>1000){
+      clearInterval(interval);
+    }
+    },100);
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..c14b3c8 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -49,6 +49,13 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.setAttribute("view", "y_line");
+      elem.setAttribute("column-pivots", '["stock"]');
+      elem.setAttribute("row_pivots", '["timestamp"]');
+      elem.setAttribute("columns", '["top_ask_price"]');
+      elem.setAttribute("aggregates",
+          '{"stock":"distinct_count", "top_ask_price":"avg", "top_bid_price":"avg", "timestamp":"distinct_count"}'
+      );
     }
   }
 
-- 
2.43.0.windows.1

